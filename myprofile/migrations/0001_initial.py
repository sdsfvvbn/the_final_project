# Generated by Django 5.2 on 2025-05-17 05:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PersonalityTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="SkillCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "Skill Category",
                "verbose_name_plural": "Skill Categories",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to="myprofile.skillcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default="avatars/default.png", upload_to="avatars/"
                    ),
                ),
                ("instagram", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "available_time",
                    models.TextField(
                        blank=True,
                        help_text="可用時間，例如 Mon & Wed evenings",
                        null=True,
                    ),
                ),
                (
                    "self_intro",
                    models.TextField(
                        blank=True, help_text="請簡單介紹你自己 :)", null=True
                    ),
                ),
                (
                    "can_teach",
                    models.ManyToManyField(
                        blank=True, related_name="teaching_users", to="myprofile.skill"
                    ),
                ),
                (
                    "personality",
                    models.ManyToManyField(blank=True, to="myprofile.personalitytag"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "want_to_learn",
                    models.ManyToManyField(
                        blank=True,
                        related_name="interested_users",
                        to="myprofile.skill",
                    ),
                ),
            ],
        ),
    ]
